# https://yaml-multiline.info/
id: p4
name: Add Two Numbers
description: |
  # Problem Description
  
  You are given two non-empty lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a list.
  
  You may assume the two numbers do not contain any leading zero, except the number 0 itself.
  
  ## Example 1:
  
  ~~~js
  Input: l1 = [2,4,3], l2 = [5,6,4]
  Output: [7,0,8]
  Explanation: 342 + 465 = 807.
  ~~~
  
  ## Example 2:
  
  ~~~js
  Input: l1 = [0], l2 = [0]
  Output: [0]
  ~~~
  
  ## Example 3:
  
  ~~~js
  Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
  Output: [8,9,9,9,0,0,0,1]
  ~~~
  
  ## Constraints:
  
  - The number of elements in each list is in the range [1, 100].
  - 0 <= element <= 9
  - It is guaranteed that the list represents a number that does not have leading zeros.
difficulty: medium
#tags:
signature: |
  def add_two_numbers(l1, l2):
    pass
#solutions:
assertions: |
  from hamcrest import *
  from testing import TestReport, test
  
  test(report, lambda: assert_that(add_two_numbers([2,4,3], [5,6,4]), equal_to([7,0,8])), 'add_two_numbers([2,4,3], [5,6,4]) should be equal to [7,0,8]')
  test(report, lambda: assert_that(add_two_numbers([0], [0]), equal_to([0])), 'add_two_numbers([0], [0]) should be equal to [0]')