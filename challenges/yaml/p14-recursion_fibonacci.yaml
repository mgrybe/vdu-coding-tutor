# https://yaml-multiline.info/
id: p14
name: Fibonacci
description: |
  # Problem Description
  
  The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,

  ~~~js
  F(0) = 0, F(1) = 1
  F(n) = F(n - 1) + F(n - 2), for n > 1.
  Given n, calculate F(n).
  ~~~

  ## Example:

  ~~~js
  Input: n = 4
  Output: 3
  Explanation: F(4) = F(3) + F(2) = 2 + 1 = 3.
  ~~~
  
  Constraints:

  ~~~js
  0 <= n <= 30
  ~~~
difficulty: easy
tags:
  - recursion
  - fibonacci
signature: |
  def fibonacci(n):
    pass

assertions: |
  from hamcrest import *
  from testing import TestReport, test

  test(report, lambda: assert_that(fibonacci(0), equal_to(0)), 'fibonacci(0) should be equal to 0')
  test(report, lambda: assert_that(fibonacci(1), equal_to(1)), 'fibonacci(1) should be equal to 1')
  test(report, lambda: assert_that(fibonacci(2), equal_to(1)), 'fibonacci(1) should be equal to 1')
  test(report, lambda: assert_that(fibonacci(10), equal_to(55)), 'fibonacci(10) should be equal to 55')
