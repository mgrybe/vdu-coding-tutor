{
    "assertions": "from hamcrest import *\nfrom testing import TestReport, test\n\ntest(report, lambda: assert_that(fibonacci(0), equal_to(0)), 'fibonacci(0) should be equal to 0')\ntest(report, lambda: assert_that(fibonacci(1), equal_to(1)), 'fibonacci(1) should be equal to 1')\ntest(report, lambda: assert_that(fibonacci(2), equal_to(1)), 'fibonacci(1) should be equal to 1')\ntest(report, lambda: assert_that(fibonacci(10), equal_to(55)), 'fibonacci(10) should be equal to 55')\n",
    "description": "# Problem Description\n\nThe Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,\n\n~~~js\nF(0) = 0, F(1) = 1\nF(n) = F(n - 1) + F(n - 2), for n > 1.\nGiven n, calculate F(n).\n~~~\n\n## Example:\n\n~~~js\nInput: n = 4\nOutput: 3\nExplanation: F(4) = F(3) + F(2) = 2 + 1 = 3.\n~~~\n\nConstraints:\n\n~~~js\n0 <= n <= 30\n~~~\n",
    "difficulty": "easy",
    "id": "p14",
    "name": "Fibonacci",
    "signature": "def fibonacci(n):\n  pass\n",
    "tags": [
        "recursion",
        "fibonacci"
    ]
}